@page "/"
@inject IJSRuntime JSRuntime
@inject HttpClient Http
@inject NavigationManager NavigationManager

<div class="container">
    <h1 class="header">Welcome to WheresTheBeer</h1>

    <p>Your go-to app for finding places that serve beer!</p>

    <p class="message">@message</p>

    <!-- PWA Install Button -->
    <button id="installPWA" class="install-button" style="display: none;">Install</button>

    <button class="button" @onclick="CallApi">Ping the Server</button>
    <button class="button" @onclick="NavigateToPlaces">Find Nearby Places</button>
</div>

@code {
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("initializePWAInstall");
        }
    }

    private string message = "Waiting for server...";

    private async Task CallApi()
    {
        try
        {
            var baseUri = Http.BaseAddress ?? new Uri("https://fallback-url.com/");
            var fullUri = new Uri(baseUri, "api/test/ping");
            Console.WriteLine($"Making request to: {fullUri}");

            message = await Http.GetStringAsync(fullUri);
        }
        catch (HttpRequestException httpRequestEx)
        {
            message = $"HttpRequestException: {httpRequestEx.Message}";
        }
        catch (Exception ex)
        {
            message = $"Exception: {ex.Message}";
        }
    }

    private void NavigateToPlaces()
    {
        NavigationManager.NavigateTo("/places");
    }
}
